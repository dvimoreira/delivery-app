{"version":3,"file":"index.js","sources":["../../electron/main/index.ts"],"sourcesContent":["import { app, BrowserWindow, shell, ipcMain, ipcRenderer } from 'electron'\nimport { release } from 'node:os'\nimport { join } from 'node:path'\nimport {PosPrinter, PosPrintData, PosPrintOptions} from \"electron-pos-printer\";\nconst { exec } = require('child_process');\nimport { autoUpdater } from \"electron-updater\";\nimport * as path from 'path';\n// var Printer = require('zuzel-printer');\nconst log = require(\"electron-log\");\n\n// The built directory structure\n//\n// ├─┬ dist-electron\n// │ ├─┬ main\n// │ │ └── index.js    > Electron-Main\n// │ └─┬ preload\n// │   └── index.js    > Preload-Scripts\n// ├─┬ dist\n// │ └── index.html    > Electron-Renderer\n//\nprocess.env.DIST_ELECTRON = join(__dirname, '..')\nprocess.env.DIST = join(process.env.DIST_ELECTRON, '../dist')\nprocess.env.PUBLIC = process.env.VITE_DEV_SERVER_URL\n  ? join(process.env.DIST_ELECTRON, '../public')\n  : process.env.DIST\n\n// Disable GPU Acceleration for Windows 7\nif (release().startsWith('6.1')) app.disableHardwareAcceleration()\n\n// Set application name for Windows 10+ notifications\nif (process.platform === 'win32') app.setAppUserModelId(app.getName())\n\nif (!app.requestSingleInstanceLock()) {\n  app.quit()\n  process.exit(0)\n}\n\n// Remove electron security warnings\n// This warning only shows in development mode\n// Read more on https://www.electronjs.org/docs/latest/tutorial/security\n// process.env['ELECTRON_DISABLE_SECURITY_WARNINGS'] = 'true'\n\nlet win: BrowserWindow | null = null\n// Here, you can also use other preload\nconst preload = join(__dirname, '../preload/index.js')\nconst url = process.env.VITE_DEV_SERVER_URL\nconst indexHtml = join(process.env.DIST, 'index.html')\n\nasync function createWindow() {\n  win = new BrowserWindow({\n    title: 'MenuCardápio.Digital',\n    icon: join(process.env.PUBLIC, 'favicon.ico'),\n    webPreferences: {\n      preload,\n      // Warning: Enable nodeIntegration and disable contextIsolation is not secure in production\n      // Consider using contextBridge.exposeInMainWorld\n      // Read more on https://www.electronjs.org/docs/latest/tutorial/context-isolation\n      nodeIntegration: true,\n      contextIsolation: false,\n    },\n  })\n\n  win.setMenu(null)\n  win.maximize()\n\n  // ipcMain.handle('get-printers-list', () =>{\n  //   console.log('Entrou aqui')\n  //   let printers = Printer.list();\n  //   return printers\n  // });\n\n  ipcMain.handle('get-printers-list', async () =>{\n    async function sh () {\n      return new Promise(function (resolve, reject) {\n        exec('wmic printer list brief', (err, stdout, stderr) => {\n          if (err) {\n              // node couldn't execute the command\n              reject(err)\n              return;\n          }\n          // list of printers with brief details\n          // console.log(stdout);\n          // the *entire* stdout and stderr (buffered)\n          stdout = stdout.split(\"  \");\n          var printers = [];\n          let j = 0;\n          stdout = stdout.filter(item => item);\n          for (let i = 0; i < stdout.length; i++) {\n              if (stdout[i] == \" \\r\\r\\n\" || stdout[i] == \"\\r\\r\\n\") {\n                  printers[j] = stdout[i + 1];\n                  j++;\n              }\n          }\n          // list of only printers name\n          resolve({printers, stdout})\n          // console.log(stderr);\n        });\n      })\n    }\n\n    let data = await sh()\n    return data;\n  });\n\n  // AQUI IMPRIME O PEDIDO\n\n  ipcMain.handle('print-data-order', async (event, ...args) => {\n    const newData = args;\n    let dataPrint = JSON.parse(newData);\n    let getPrinterData = JSON.parse(dataPrint.printer);\n    let result = dataPrint.item;\n\n    const options: PosPrintOptions = {\n      preview: false,\n      margin: \"0 10px 0 10px\",\n      copies: 1,\n      printerName: getPrinterData.impressora,\n      printBackground: true,\n      timeOutPerLine: 400,\n      pageSize: getPrinterData.largura + \"mm\",\n      silent: true\n    }\n\n    let data: PosPrintData[] = [\n      {\n          type: 'text',                                       // 'text' | 'barCode' | 'qrCode' | 'image' | 'table\n          value: 'Pedido ' + result.codigo_pedido,\n          style: {fontWeight: \"700\", textAlign: 'center', fontSize: \"20px\", marginBottom: \"40px\"}\n      },\n      {\n        type: 'text',                                       // 'text' | 'barCode' | 'qrCode' | 'image' | 'table\n        value: 'Cliente: ' + result.cli_name,\n        style: {fontWeight: \"400\", textAlign: 'left', marginBottom: \"5px\", fontSize: \"16px\"}\n      },\n      {\n        type: 'text',                                       // 'text' | 'barCode' | 'qrCode' | 'image' | 'table\n        value: 'Telefone: ' + result.phone,\n        style: {fontWeight: \"400\", textAlign: 'left', marginBottom: \"5px\", fontSize: \"16px\"}\n      },\n      {\n        type: 'text',                                       // 'text' | 'barCode' | 'qrCode' | 'image' | 'table\n        value: (result.tipo_pedido === 'delivery') ? 'Tipo de pedido: Entrega' : 'Tipo de pedido: Comer na Praça',\n        style: {fontWeight: \"400\", textAlign: 'left', marginBottom: \"5px\", fontSize: \"16px\"}\n      },\n      {\n        type: 'text',                                       // 'text' | 'barCode' | 'qrCode' | 'image' | 'table\n        value: (result.payment_type === 'money') ? 'Forma de Pagamento: Dinheiro' : 'Forma de Pagamento: Cartão',\n        style: {fontWeight: \"400\", textAlign: 'left', marginBottom: \"5px\", fontSize: \"16px\"}\n      },\n      {\n        type: 'text',                                       // 'text' | 'barCode' | 'qrCode' | 'image' | 'table\n        value: 'Troco para: R$ ' + result.troco,\n        style: {fontWeight: \"400\", textAlign: 'left', borderBottom: \"1px solid #000000\", paddingBottom: \"15px\", marginBottom: \"30px\", fontSize: \"16px\"}\n      },\n      {\n        type: 'text',                                       // 'text' | 'barCode' | 'qrCode' | 'image' | 'table\n        value: 'Taxa de Entrega: R$ ' + result.total_frete,\n        style: {fontWeight: \"400\", textAlign: 'left', marginBottom: \"5px\", fontSize: \"16px\"}\n      },\n      {\n        type: 'text',                                       // 'text' | 'barCode' | 'qrCode' | 'image' | 'table\n        value: 'Valor do Pedido: R$ ' + result.total_pedido,\n        style: {fontWeight: \"400\", textAlign: 'left', marginBottom: \"5px\", fontSize: \"16px\"}\n      },\n      {\n        type: 'text',                                       // 'text' | 'barCode' | 'qrCode' | 'image' | 'table\n        value: 'Valor Total: R$ ' + result.total_soma,\n        style: {fontWeight: \"400\", textAlign: 'left', borderBottom: \"1px solid #000000\", paddingBottom: \"15px\", marginBottom: \"30px\", fontSize: \"16px\"}\n      }\n    ]\n\n    if (result.tipo_pedido === 'delivery') {\n      data.push(\n        {\n          type: 'text',                                       // 'text' | 'barCode' | 'qrCode' | 'image' | 'table\n          value: 'Endereço: ' + result.rua,\n          style: {fontWeight: \"400\", textAlign: 'left', marginBottom: \"5px\", fontSize: \"16px\"}\n        },\n        {\n          type: 'text',                                       // 'text' | 'barCode' | 'qrCode' | 'image' | 'table\n          value: 'Bairro: ' + result.bairro,\n          style: {fontWeight: \"400\", textAlign: 'left', marginBottom: \"5px\", fontSize: \"16px\"}\n        },\n        {\n          type: 'text',                                       // 'text' | 'barCode' | 'qrCode' | 'image' | 'table\n          value: 'Complemento: ' + result.complemento,\n          style: {fontWeight: \"400\", textAlign: 'left', marginBottom: \"5px\", fontSize: \"16px\"}\n        },\n        {\n          type: 'text',                                       // 'text' | 'barCode' | 'qrCode' | 'image' | 'table\n          value: 'CEP: ' + result.cep,\n          style: {fontWeight: \"400\", textAlign: 'left', borderBottom: \"1px solid #000000\", paddingBottom: \"15px\", marginBottom: \"30px\", fontSize: \"16px\"}\n        }\n      )\n    }\n\n    let itensCardapio = JSON.parse(result.pedido_itens)\n    let carrinho = []\n\n    itensCardapio.forEach(item => {\n      let cartTemp = []\n      cartTemp.push(item.item)\n      cartTemp.push(item.qtd)\n      cartTemp.push(item.price)\n      carrinho.push(cartTemp)\n    });\n\n    data.push(\n      {\n        type: 'text',                                       // 'text' | 'barCode' | 'qrCode' | 'image' | 'table\n        value: 'Observação: ' + result.observacao,\n        style: {fontWeight: \"600\", textAlign: 'left', borderBottom: \"1px solid #000000\", paddingBottom: \"15px\", marginBottom: \"30px\", fontSize: \"16px\"}\n      },\n\n      {\n        type: 'text',                                       // 'text' | 'barCode' | 'qrCode' | 'image' | 'table\n        value: 'Itens do pedido: ',\n        style: {fontWeight: \"700\", textAlign: 'left', marginBottom: \"5px\", fontSize: \"20px\"}\n      },\n\n      {\n        type: 'table',\n        // style the table\n        style: {border: '1px solid #000000'},\n        // list of the columns to be rendered in the table header\n        tableHeader: ['Item', 'Qtd', 'Total'],\n        // multi dimensional array depicting the rows and columns of the table body\n        tableBody: carrinho,\n        // custom style for the table body\n        // list of columns to be rendered in the table footer\n        tableFooter: ['Item', 'Qtd', 'Total'],\n        // custom style for the table header\n        tableHeaderStyle: { color: '#000000'},\n        // custom style for the table body\n        tableBodyStyle: {'border': '2px solid #00000'},\n        // custom style for the table footer\n        tableFooterStyle: {color: '#000000'},\n      }\n    )\n\n    PosPrinter.print(data, options)\n      .then(console.log)\n      .catch((error) => {\n        console.error(error);\n      });\n  })\n\n  // AQUI TERMINA DE IMPRIMIR O PEDIDO\n\n  if (process.env.VITE_DEV_SERVER_URL) { // electron-vite-vue#298\n    console.log(join(process.env.DIST_ELECTRON, '../dist'))\n    console.log(url)\n    win.loadURL(url)\n    // Open devTool if the app is not packaged\n    win.webContents.openDevTools()\n\n    autoUpdater.updateConfigPath = path.join(\n      __dirname,\n      \"../dev-app-update.yml\" // change path if needed\n    );\n  } else {\n    win.loadURL(url)\n  }\n\n  // Test actively push message to the Electron-Renderer\n  win.webContents.on('did-finish-load', () => {\n    win?.webContents.send('main-process-message', new Date().toLocaleString())\n  })\n\n  // Make all links open with the browser, not with the application\n  win.webContents.setWindowOpenHandler(({ url }) => {\n    if (url.startsWith('https:')) shell.openExternal(url)\n    return { action: 'deny' }\n  })\n  // win.webContents.on('will-navigate', (event, url) => { }) #344\n  \n  process.env.GH_TOKEN = \"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\";\n  autoUpdater.autoDownload = false;\n  autoUpdater.checkForUpdates();\n}\n\napp.on(\"ready\", function() {\n  createWindow();\n  autoUpdater.checkForUpdatesAndNotify();\n});\n\nautoUpdater.on(\"update-available\", () => {\n  ipcRenderer.invoke(\"updater\", \"update_available\");\n});\nautoUpdater.on(\"update-not-available\", () => {\n  ipcRenderer.invoke(\"updater\", \"update_not_available\");\n});\n\napp.on('window-all-closed', () => {\n  win = null\n  if (process.platform !== 'darwin') app.quit()\n})\n\n\napp.on('second-instance', () => {\n  if (win) {\n    // Focus on the main window if the user tried to open another\n    if (win.isMinimized()) win.restore()\n    win.focus()\n  }\n})\n\napp.on('activate', () => {\n  const allWindows = BrowserWindow.getAllWindows()\n  if (allWindows.length) {\n    allWindows[0].focus()\n  } else {\n    createWindow()\n  }\n})\n\n// New window example arg: new windows url\nipcMain.handle('open-win', (_, arg) => {\n  const childWindow = new BrowserWindow({\n    webPreferences: {\n      preload,\n      nodeIntegration: true,\n      contextIsolation: false,\n    },\n  })\n\n  if (process.env.VITE_DEV_SERVER_URL) {\n    childWindow.loadURL(`${url}#${arg}`)\n    \n    autoUpdater.updateConfigPath = path.join(\n      __dirname,\n      \"../dev-app-update.yml\" // change path if needed\n    );\n  } else {\n    childWindow.loadURL(`${url}#${arg}`)\n  }\n})\n"],"names":["join","release","app","BrowserWindow","ipcMain","PosPrinter","autoUpdater","path","url","shell","ipcRenderer"],"mappings":"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"}